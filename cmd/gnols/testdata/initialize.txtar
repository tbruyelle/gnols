server start

lsp initialize
cmp output/init1.json output/init1.json.golden

server stop

-- output/init1.json.golden --
{
 "capabilities": {
  "codeLensProvider": {
   "resolveProvider": true
  },
  "completionProvider": {
   "triggerCharacters": [
    "."
   ]
  },
  "definitionProvider": {},
  "documentFormattingProvider": true,
  "executeCommandProvider": {
   "commands": [
    "gnols.gnofmt",
    "gnols.test"
   ]
  },
  "hoverProvider": true,
  "referencesProvider": {},
  "textDocumentSync": {
   "change": 1,
   "openClose": true,
   "save": {
    "includeText": true
   }
  }
 }
}
-- gno.mod --
module gnotest
-- gnotest.gno --
package gnotest

func Hello() string {
	_ = X{}
	Y{}
	return "hello world"
}

type X struct{}
-- gnotest.gno.gen.go.golden --
// Code generated by github.com/gnolang/gno. DO NOT EDIT.

//go:build gno

//line gnotest.gno:1:1
package gnotest

func Hello() string {
	_ = X{}
	Y{}
	return "hello world"
}

type X struct{}
-- go.mod --
module gnotest

go 1.21.5
-- x.gno --
package gnotest

func Hey() {
	Hello()
	_ = X{}
}
-- x.gno.gen.go.golden --
// Code generated by github.com/gnolang/gno. DO NOT EDIT.

//go:build gno

//line x.gno:1:1
package gnotest

func Hey() {
	Hello()
	_ = X{}
}
