# Init phase
lsp initialize input/initialize.json
lsp initialized input/initialized.json
lsp workspace/didChangeConfiguration input/didChangeConfiguration.json
lsp textDocument/didOpen input/didOpen_x.json

lsp textDocument/completion input/completion.json
cmpenv output/completion.json expected/completion.json
-- x.gno --
package foo

// MyType is my type
type MyType struct {
	A int
}

func Hello() {
	x := MyType{}
	x.
}
-- input/initialize.json --
{
	"rootUri": "file://$WORK"
}
-- input/initialized.json --
{}
-- input/didChangeConfiguration.json --
{
	"settings": {
		"gno":              "$GOBIN/gno",
		"gopls":            "$GOBIN/gopls",
		"root":             "$GNOPATH",
		"precompileOnSave": true,
		"buildOnSave":      true
	}
}
-- input/didOpen_x.json --
{
	"textDocument": {
		"uri":"file://$WORK/x.gno",
		"text":"${FILE_x.gno}"
	}
}
-- input/completion.json --
{
	"textDocument": {
		"uri":"file://$WORK/x.gno"
	},
	"position": {
		"character": 3,
		"line": 9
	}
}
-- expected/completion.json --
[
  {
    "detail": "type MyType struct{\n  A int\n}",
    "documentation": "MyType is my type",
    "insertText": "MyType",
    "kind": 7,
    "label": "MyType"
	}
]
