printSymbols
cmp stdout expected.json
-- x.gno --
package foo

// MyType is my type
type MyType struct {
	// A is a
	A int
	B string
	C OtherType
	d int
}

func (MyType) F(int) bool { return false }

func (otherType) f(int) bool { return false }

type otherType struct {
	X int
}

var (
	G1 = ""
	G2 string
	G3 = MyType{}
	G4 = struct{ A int }
)

func Hello() {
	x := MyType{}
	y := &MyType{}
}
-- expected.json --
[
  {
    "Name": "script-parsePackages-variable",
    "ImportPath": ".",
    "Symbols": [
      {
        "Name": "MyType",
        "Doc": "MyType is my type",
        "Signature": "MyType struct",
        "Kind": "struct",
        "Fields": [
          {
            "Name": "A",
            "Doc": "A is a",
            "Signature": "A int",
            "Kind": "field",
            "Type": "int"
          },
          {
            "Name": "B",
            "Signature": "B string",
            "Kind": "field",
            "Type": "string"
          },
          {
            "Name": "C",
            "Signature": "C OtherType",
            "Kind": "field",
            "Type": "OtherType"
          },
          {
            "Name": "d",
            "Signature": "d int",
            "Kind": "field",
            "Type": "int"
          },
          {
            "Name": "F",
            "Signature": "func (MyType) F(int) bool",
            "Kind": "func",
            "Recv": "MyType"
          }
        ]
      },
      {
        "Name": "otherType",
        "Signature": "otherType struct",
        "Kind": "struct",
        "Fields": [
          {
            "Name": "X",
            "Signature": "X int",
            "Kind": "field",
            "Type": "int"
          },
          {
            "Name": "f",
            "Signature": "func (otherType) f(int) bool",
            "Kind": "func",
            "Recv": "otherType"
          }
        ]
      },
      {
        "Name": "G1",
        "Signature": "G1 = \"\"",
        "Kind": "var",
        "Type": "string"
      },
      {
        "Name": "G2",
        "Signature": "G2 string",
        "Kind": "var",
        "Type": "string"
      },
      {
        "Name": "G3",
        "Signature": "G3 = MyType{}",
        "Kind": "var",
        "Type": "MyType"
      },
      {
        "Name": "G4",
        "Signature": "G4 = struct{ A int }",
        "Kind": "var",
        "Fields": [
          {
            "Name": "A",
            "Signature": "A int",
            "Kind": "field",
            "Type": "int"
          }
        ]
      },
      {
        "Name": "Hello",
        "Signature": "func Hello()",
        "Kind": "func"
      },
      {
        "Name": "x",
        "Signature": "x := MyType{}",
        "Kind": "var",
        "Type": "MyType"
      },
      {
        "Name": "y",
        "Signature": "y := \u0026MyType{}",
        "Kind": "var",
        "Type": "MyType"
      }
    ]
  }
]
